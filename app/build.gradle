apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.rlm.imeikotlin"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    implementation 'androidx.appcompat:appcompat:1.0.0'

    //implementation 'androidx.core:core-ktx:1.1.0-alpha04'
    implementation 'androidx.core:core-ktx:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'

    //          arquitectura de componentes         //

    // ROOM
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"

    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation "androidx.room:room-guava:$room_version"

    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // alternatively - just ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // For Kotlin use lifecycle-viewmodel-ktx

    // alternatively - just LiveData
    implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"

    // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI

    //     AndroidX libraries use this lightweight import for Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // For Kotlin use kapt instead of annotationProcessor

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    // For Kotlin use lifecycle-reactivestreams-ktx

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    /*                  DAGGER2                 */
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "javax.annotation:jsr250-api:$jsr250_version"
    implementation "javax.inject:javax.inject:$inject_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"

    /*                  LOGGER                 */
    implementation "com.orhanobut:logger:$logger_version"

    // RETROFIT2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:retrofit-converters:$retrofit_version"

    // OKHTTP3
    implementation "com.squareup.okhttp3:okhttp:$okHttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp_version"

    // RXJAVA

    //implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

    // RXKOTLIN

    //implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"

    // RXANDROID
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

    // RXBINDING
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxbinding_version"

    // RXPERMISSIONS
    implementation "com.tbruyelle.rxpermissions2:rxpermissions:$rxpermissions_java"

    // GSON
    implementation "com.google.code.gson:gson:$gson_version"

    // MULTIDEX
    implementation "com.android.support:multidex:$multidex_version"

    // PLAY SERVICES
    implementation "com.google.android.gms:play-services-maps:$playservices_version"

    //implementation "com.google.android.gms:play-services-location:$playservices_version"

    ////********************************************************************

    // ANKO
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // ANKO LAYOUTS
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"

    // Coroutine listeners for Anko Layouts

    //compile "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"

    //compile "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"

    // PICASSO
    implementation "com.squareup.picasso:picasso:$picasso_version"

    // COMMONS
    implementation "commons-io:commons-io:$commons_version"

    // MPAndroidChart

    implementation "com.github.PhilJay:MPAndroidChart:$mpandroidchart_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
}